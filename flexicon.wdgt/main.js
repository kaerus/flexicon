/* 
 This file was generated by Dashcode.  
 You may edit this file to customize your widget or web page 
 according to the license.txt file included in the project.
 */

//
// Function: load()
// Called by HTML body element's onload event when the widget is ready to start
//
function load()
{
    dashcode.setupParts();
}

//
// Function: remove()
// Called when the widget has been removed from the Dashboard
//
function remove()
{
    // Stop any timers to prevent CPU usage
    // Remove any preferences as needed
    // widget.setPreferenceForKey(null, dashcode.createInstancePreferenceKey("your-key"));
}

//
// Function: hide()
// Called when the widget has been hidden
//
function hide()
{
    // Stop any timers to prevent CPU usage
}

//
// Function: show()
// Called when the widget has been shown
//
function show()
{
    // Restart any timers that were stopped on hide
    console.log("showing widget");
}

//
// Function: sync()
// Called when the widget has been synchronized with .Mac
//
function sync()
{
    // Retrieve any preference values that you need to be synchronized here
    // Use this for an instance key's value:
    // instancePreferenceValue = widget.preferenceForKey(null, dashcode.createInstancePreferenceKey("your-key"));
    //
    // Or this for global key's value:
    // globalPreferenceValue = widget.preferenceForKey(null, "your-key");
}

//
// Function: showBack(event)
// Called when the info button is clicked to show the back of the widget
//
// event: onClick event from the info button
//
function showBack(event)
{
    var front = document.getElementById("front");
    var back = document.getElementById("back");

    if (window.widget) {
        widget.prepareForTransition("ToBack");
    }

    front.style.display = "none";
    back.style.display = "block";

    if (window.widget) {
        setTimeout('widget.performTransition();', 0);
    }
}

//
// Function: showFront(event)
// Called when the done button is clicked from the back of the widget
//
// event: onClick event from the done button
//
function showFront(event)
{
    var front = document.getElementById("front");
    var back = document.getElementById("back");

    if (window.widget) {
        widget.prepareForTransition("ToFront");
    }

    front.style.display="block";
    back.style.display="none";

    if (window.widget) {
        setTimeout('widget.performTransition();', 0);
    }
}

if (window.widget) {
    widget.onremove = remove;
    widget.onhide = hide;
    widget.onshow = show;
    widget.onsync = sync;
}


var ajax = require('ajax');

function onSearch(event)
{    
    var search = document.getElementById('search'),
        searchVal = search.value,
        popup = document.getElementById('popup'),
        popupval = popup.object.getValue(),
        apiURL = 'http://folkets-lexikon.csc.kth.se/folkets/service',
        request = '?word=' + searchVal + '&lang=both' + '&interface=' + popupval,
        content = document.getElementById('content');
    
    ajax.get(apiURL+request,{
        accept:'text/html',
        type:'application/x-www-form-urlencoded',
        charset:'iso-8859-1',
        timeout: 4000
    }).then(function(result){
        
        alert("result: " + result); 
        
        var html = parseXML(result);
        
        content.innerHTML = html;
        
        document.getElementById("scrollArea").object.refresh();
            
    },function(error){
        content.innerHTML = error.message||error;
        document.getElementById("scrollArea").object.refresh();
    });
    
}

function parseXML(xml) {
    xml = xml.substring(xml.indexOf('<body') + xml.substring(xml.indexOf('<body')).indexOf('>')+1);
    xml = xml.substring(0, xml.indexOf('</body>'));
    return xml;
}

var lastPos = {x:0,y:0};

function mouseDown(event)
{
    var x = event.x + window.screenX;
    var y = event.y + window.screenY;
        
    document.addEventListener("mousemove", mouseMove, true);
    document.addEventListener("mouseup", mouseUp, true);
    lastPos.x = x;
    lastPos.y = y;
    event.stopPropagation();
    event.preventDefault();
}


function mouseMove(event)
{
    var screenX = event.x + window.screenX;
    var screenY = event.y + window.screenY;
                        
    window.resizeBy(screenX - lastPos.x, screenY - lastPos.y);
    
    lastPos.x = screenX;
    lastPos.y = screenY;
    
    event.stopPropagation();
    event.preventDefault();
    
    //var content = document.getElementById("content");
    document.getElementById("scrollArea").object.refresh();

}

function mouseUp(event)
{
    document.removeEventListener("mousemove", mouseMove, true);
    document.removeEventListener("mouseup", mouseUp, true); 
    event.stopPropagation();
    event.preventDefault();

      var content = document.getElementById("content");
      document.getElementById("scrollArea").object.refresh();
}